load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_python//python:defs.bzl", "py_library")
load("@llvm-project//mlir:tblgen.bzl", "gentbl_cc_library", "gentbl_filegroup", "td_library")
load(":symlink_files.bzl", "symlink_files")
load("@pybind11_bazel//:build_defs.bzl", "pybind_extension")

package(
    default_visibility = [
        "//visibility:public",
    ],
)

symlink_files(
    name = "ir_py_files",
    srcs = ["@llvm-project//mlir/python:IRPyFiles"],
    dst = "torch_mlir/",
)

symlink_files(
    name = "mlir_lib_py_files",
    srcs = ["@llvm-project//mlir/python:MlirLibsPyFiles"],
    dst = "torch_mlir/_mlir_libs",
)

symlink_files(
    name = "pass_manager_py_files",
    srcs = ["@llvm-project//mlir/python:PassManagerPyFiles"],
    dst = "torch_mlir/",
)

symlink_files(
    name = "execution_engine_py_files",
    srcs = ["@llvm-project//mlir/python:ExecutionEnginePyFiles"],
    dst = "torch_mlir/",
)

symlink_files(
    name = "runtime_py_files",
    srcs = ["@llvm-project//mlir/python:RuntimePyFiles"],
    dst = "torch_mlir/runtime/",
)

py_library(
    name = "torch_mlir_py",
    srcs = glob([
        "torch_mlir/*.py",
        "torch_mlir/jit_ir_importer/*.py",
        "torch_mlir/jit_ir_importer/build_tools/*.py",
        "torch_mlir/_mlir_libs/*.py",
        "torch_mlir/_mlir_libs/_mlir/*.py",
    ]),
    deps = [
        "//python:torch_dialect",
    ],
    data = [
        "//python:TorchOpsPyFiles",
        ":ir_py_files",
        ":mlir_lib_py_files",
        "//python:dialect_core_py_files",
        "//python:dialect_func_py_files",
        ":pass_manager_py_files",
        ":execution_engine_py_files",
        ":runtime_py_files",
        ":torch_mlir/_mlir_libs/_jit_ir_importer.so",
        ":torch_mlir/_mlir_libs/_mlir.so",
        "//python:torch_mlir/_mlir_libs/_torchMlir.so",
        ":torch_mlir/_mlir_libs/_mlirExecutionEngine.so",
        ":torch_mlir/_mlir_libs/_mlirRegisterEverything.so",
    ],
)

pybind_extension(
    name = "torch_mlir/_mlir_libs/_mlir",
    srcs = [
        "@llvm-project//mlir:lib/Bindings/Python/MainModule.cpp",
    ],
    deps = [
        ":TorchMLIRCAPI_shared_lib",
        "@llvm-project//mlir:MLIRBindingsPythonHeaders",
    ],
    visibility = ["//visibility:public"],
)

pybind_extension(
    name = "torch_mlir/_mlir_libs/_mlirExecutionEngine",
    srcs = [
        "@llvm-project//mlir:lib/Bindings/Python/ExecutionEngineModule.cpp",
    ],
    deps = [
        ":TorchMLIRCAPI_shared_lib",
        "@llvm-project//mlir:MLIRBindingsPythonHeaders",
    ],
    visibility = ["//visibility:public"],
)

pybind_extension(
    name = "torch_mlir/_mlir_libs/_mlirRegisterEverything",
    srcs = [
        "@llvm-project//mlir:include/mlir-c/Bindings/Python/Interop.h",
        "@llvm-project//mlir:include/mlir/Bindings/Python/PybindAdaptors.h",
        "@llvm-project//mlir:lib/Bindings/Python/RegisterEverything.cpp",
    ],
    deps = [
        ":TorchMLIRCAPI_shared_lib",
        "@llvm-project//mlir:MLIRBindingsPythonHeaders",
        "@llvm-project//mlir:CAPIConversionHeaders",
        "@llvm-project//mlir:CAPIRegisterEverythingHeaders",
        "@llvm-project//mlir:CAPITransformsHeaders",
    ],
    visibility = ["//visibility:public"],
)

pybind_extension(
    name = "torch_mlir/_mlir_libs/_jit_ir_importer",
    srcs = [
        "torch_mlir/csrc/jit_ir_importer/class_annotator_pybind.cpp",
        "torch_mlir/csrc/jit_ir_importer/get_registered_ops.cpp",
        "torch_mlir/csrc/jit_ir_importer/import_options_pybind.cpp",
        "torch_mlir/csrc/jit_ir_importer/init_python_bindings.cpp",
        "torch_mlir/csrc/jit_ir_importer/module_builder.cpp",

        "torch_mlir/csrc/jit_ir_importer/get_registered_ops.h",
        "torch_mlir/csrc/jit_ir_importer/module_builder.h",
        "torch_mlir/csrc/jit_ir_importer/import_options_pybind.h",
        "torch_mlir/csrc/jit_ir_importer/class_annotator_pybind.h",
    ],
    tags = ["local"],
    deps = [
        ":TorchMLIRCAPI_shared_lib",
        "//projects/jit_ir_common:jit_ir_importer_lib",
    ]
)

cc_binary(
    name = "torch_mlir/_mlir_libs/TorchMLIRCAPI.so",
    linkopts = [
        "-Wl,-soname=TorchMLIRCAPI.so",
        "-Wl,-rpath='$$ORIGIN'",
    ],
    deps = ["//:TorchMLIRCAPIObjs"],
    linkshared = True,
)

cc_library(
    name = "TorchMLIRCAPI_shared_lib",
    srcs = [":torch_mlir/_mlir_libs/TorchMLIRCAPI.so"],
    alwayslink = True,
)

py_library(
    name = "torch_mlir_e2e_test_lib_py",
    srcs = glob([
        "torch_mlir_e2e_test/*.py",
        "torch_mlir_e2e_test/linalg_on_tensors_backends/*.py",
        "torch_mlir_e2e_test/torchscript/*.py",
        "torch_mlir_e2e_test/torchscript/configs/*.py",
        "torch_mlir_e2e_test/tosa_backends/*.py",
        "torch_mlir_e2e_test/eager_backends/*.py",
    ])
)
